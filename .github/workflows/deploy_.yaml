name: deploy

on: 
  workflow_dispatch:
    inputs:
      ENV:
        required: true
        description: 'Environment (development, production)'     
      VERSION:
        required: true
        description:  'Version to deploy ( eg. v1.13; should be available in Artifact Registry )'

env:
  APP_NAME: simple
  ENV: ${{ github.event.inputs.ENV }}
  VERSION: ${{ github.event.inputs.VERSION }}
  GCP_PROJECT_ID: simple-326714
  GCP_REGISTRY: europe-west3-docker.pkg.dev
  HELM_VERSION: v3.6.0
  HELM_RELEASE_NAME: simple-helm-release
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      HELM_CHART_REF: ${{ steps.helm.outputs.HELM_CHART_REF }}
    steps:
      - id: helm
        run: echo "::set-output name=HELM_CHART_REF::${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/helm/${{ env.APP_NAME }}:${{ env.VERSION }}"

  deploy:
    runs-on: ubuntu-latest
    needs: vars
    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}
      
      - name: configure docker to use artifact registry
        run: gcloud auth configure-docker ${{ env.GCP_REGISTRY}}
      
      - name: configure helm to use artifact registry
        run: export DOCKER_CONFIG="$HOME/.docker" \
          export HELM_REGISTRY_CONFIG="${DOCKER_CONFIG}/config.json"
        # gcloud auth print-access-token | helm registry login -u oauth2accesstoken --password-stdin https://${{ env.GCP_REGISTRY }} # srsly???

      # - name: save kubeconfig so helm can use it 
      #   run: |
      #     mkdir -p $HOME/.kube
      #     kubectl config view --raw > $HOME/.kube/config
      #     chmod 600 $HOME/.kube/config

      - name: deploy
        run: helm upgrade ${{ env.HELM_RELEASE_NAME }} ${{ needs.vars.outputs.HELM_CHART_REF }} --values helm/values-${{ env.ENV }}.yaml --install --reset-values --wait 
        # TODO: helm cant find kubeconfig for some reason




