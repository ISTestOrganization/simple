name: release

on:
  release:
    types: [published]

env:
  APP_NAME: simple
  GCP_PROJECT_ID: simple-326714
  GCP_REGISTRY: europe-west3-docker.pkg.dev
  HELM_VERSION: v3.6.0
  VERSION: ${{ github.event.release.tag_name }}

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      DOCKER_IMAGE_TAG: ${{ steps.helm.outputs.DOCKER_IMAGE_TAG }}
      HELM_CHART_REF: ${{ steps.docker.outputs.HELM_CHART_REF }}
    steps:
      - id: docker
        run: echo "::set-output name=DOCKER_IMAGE_TAG::${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/docker/${{ env.APP_NAME }}:${{ env.VERSION }}"
      - id: helm
        run: echo "::set-output name=HELM_CHART_REF::${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/helm/${{ env.APP_NAME }}:${{ env.VERSION }}"
  
  release_docker:
    runs-on: ubuntu-latest
    needs: vars
    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: configure docker to use gcloud registry
        run: gcloud auth configure-docker europe-west3-docker.pkg.dev

      - name: print docker/config.json
        run: cat ~/.docker/config.json

      - name: build docker image
        run: docker build --tag ${{ needs.vars.outputs.DOCKER_IMAGE_TAG }} .

      - name: push docker image
        run: docker push ${{ needs.vars.outputs.DOCKER_IMAGE_TAG }}

  release_helm:
    runs-on: ubuntu-latest
    needs: vars
    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}
      
      - name: configure helm to use artifact registry
        run: gcloud auth print-access-token | helm registry login -u oauth2accesstoken --password-stdin ${{ env.GCP_REGISTRY }}

      - name: build helm chart
        run: helm chart save ./helm ${{ needs.vars.outputs.HELM_CHART_REF }}

      - name: push helm chart
        run: helm chart push ${{ needs.vars.outputs.HELM_CHART_REF }}
